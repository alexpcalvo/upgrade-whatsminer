#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

isH3Platform=false

cpuinfo=`cat /proc/cpuinfo | grep sun8i`
if [ "$cpuinfo" != "" ]; then
	isH3Platform=true
	echo 2 > /proc/irq/33/smp_affinity
	echo 4 > /proc/irq/34/smp_affinity
	echo 8 > /proc/irq/35/smp_affinity
fi

init_led() {
	if [ "$isH3Platform" = true ]; then
		echo 102 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio102/direction
		echo 103 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio103/direction
		echo 0 > /sys/class/gpio/gpio102/value
		echo 1 > /sys/class/gpio/gpio103/value
	else
		echo 943 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio943/direction
		echo 944 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio944/direction
		echo 0 > /sys/class/gpio/gpio943/value
		echo 1 > /sys/class/gpio/gpio944/value
	fi
}

set_reset_directions() {
	if [ "$isH3Platform" = true ]; then
		echo 99 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio99/direction
		echo 100 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio100/direction
		echo 101 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio101/direction
	else
		echo 960 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio960/direction
		echo 962 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio962/direction
		echo 964 > /sys/class/gpio/export
		echo out > /sys/class/gpio/gpio964/direction
	fi
}

set_plug_directions() {
	if [ "$isH3Platform" = true ]; then
		echo 15 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio15/direction
		echo 7 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio7/direction
		echo 8 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio8/direction
	else
		echo 961 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio961/direction
		echo 963 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio963/direction
		echo 965 > /sys/class/gpio/export
		echo in > /sys/class/gpio/gpio965/direction
	fi
}

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}

boot() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /var/tmp
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	/sbin/kmodloader

	# allow wifi modules time to settle
	sleep 1

	/sbin/wifi detect > /tmp/wireless.tmp
	[ -s /tmp/wireless.tmp ] && {
		cat /tmp/wireless.tmp >> /etc/config/wireless
	}
	rm -f /tmp/wireless.tmp

	/bin/board_detect
	uci_apply_defaults
	set_reset_directions
	set_plug_directions
	init_led

	# temporary hack until configd exists
	/sbin/reload_config

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}
}
